apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: flask-api
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres-db
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: flask-api-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: flask-api-config
                key: POSTGRES_PORT
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: flask-api-config
                key: POSTGRES_USER
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: flask-api-config
                key: POSTGRES_DB
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-db-secret
                key: postgres-password
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["psql", "-w", "-U", "postgres", "-d", "klyde_db", "-c", "SELECT 1"]
          initialDelaySeconds: 15
          timeoutSeconds: 2
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["psql", "-w", "-U", "postgres", "-d", "klyde_db", "-c", "SELECT 1"]
          initialDelaySeconds: 45
          timeoutSeconds: 2
          periodSeconds: 10
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-db-pvc